(self.webpackChunkshopping_list_app=self.webpackChunkshopping_list_app||[]).push([[614],{"./src/ui/uiTextNumber/storyboard/UITextNumber.stories.tsx":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{"use strict";__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,{Default:()=>Default,InteractiveExample:()=>InteractiveExample,TestClearTextBox:()=>TestClearTextBox,TestTypeNewValue:()=>TestTypeNewValue,__namedExportsOrder:()=>__namedExportsOrder,default:()=>__WEBPACK_DEFAULT_EXPORT__});var _storybook_jest__WEBPACK_IMPORTED_MODULE_4__=__webpack_require__("./node_modules/@storybook/jest/dist/index.mjs"),react__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__("./node_modules/react/index.js"),_UITextNumber__WEBPACK_IMPORTED_MODULE_1__=__webpack_require__("./src/ui/uiTextNumber/UITextNumber.tsx"),_storybook_testing_library__WEBPACK_IMPORTED_MODULE_2__=__webpack_require__("./node_modules/@storybook/testing-library/dist/index.mjs"),react_jsx_runtime__WEBPACK_IMPORTED_MODULE_3__=__webpack_require__("./node_modules/react/jsx-runtime.js");const __WEBPACK_DEFAULT_EXPORT__={title:"UI/UITextNumber",component:_UITextNumber__WEBPACK_IMPORTED_MODULE_1__.Z,parameters:{layout:"centered"},tags:["autodocs"],argTypes:{value:{control:{type:"number",min:0,max:30,step:1}},onValueChanged:{action:"value changed"}}},Default={args:{value:2}},InteractiveExample=()=>{const[value,setValue]=(0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(1);return(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_3__.jsx)(_UITextNumber__WEBPACK_IMPORTED_MODULE_1__.Z,{value,onValueChanged:newValue=>{setValue(newValue)}})},TestClearTextBox={args:{testId:"text-number-demo",value:10,onValueChanged:_storybook_jest__WEBPACK_IMPORTED_MODULE_4__.e.fn()},play:async _ref=>{let{canvasElement}=_ref;const refTextBox=(0,_storybook_testing_library__WEBPACK_IMPORTED_MODULE_2__.uh)(canvasElement).getByTestId("text-number-demo");await _storybook_testing_library__WEBPACK_IMPORTED_MODULE_2__.mV.clear(refTextBox),await(0,_storybook_jest__WEBPACK_IMPORTED_MODULE_4__.l)(TestClearTextBox.args.onValueChanged).toHaveBeenCalledWith(0)}},TestTypeNewValue={args:{testId:"text-number-demo",value:10,onValueChanged:_storybook_jest__WEBPACK_IMPORTED_MODULE_4__.e.fn()},play:async _ref2=>{let{canvasElement}=_ref2;const refTextBox=(0,_storybook_testing_library__WEBPACK_IMPORTED_MODULE_2__.uh)(canvasElement).getByTestId("text-number-demo");await _storybook_testing_library__WEBPACK_IMPORTED_MODULE_2__.mV.type(refTextBox,"5",{initialSelectionStart:0,initialSelectionEnd:1e3}),await(0,_storybook_jest__WEBPACK_IMPORTED_MODULE_4__.l)(TestTypeNewValue.args.onValueChanged).toHaveBeenCalledWith(5)}};Default.parameters={...Default.parameters,docs:{...Default.parameters?.docs,source:{originalSource:"{\n  args: {\n    value: 2\n  }\n}",...Default.parameters?.docs?.source}}},InteractiveExample.parameters={...InteractiveExample.parameters,docs:{...InteractiveExample.parameters?.docs,source:{originalSource:"() => {\n  const [value, setValue] = useState(1);\n  return <UITextNumber value={value} onValueChanged={newValue => {\n    setValue(newValue);\n  }} />;\n}",...InteractiveExample.parameters?.docs?.source}}},TestClearTextBox.parameters={...TestClearTextBox.parameters,docs:{...TestClearTextBox.parameters?.docs,source:{originalSource:'{\n  args: {\n    testId: "text-number-demo",\n    value: 10,\n    onValueChanged: jest.fn()\n  },\n  play: async ({\n    canvasElement\n  }) => {\n    const canvas = within(canvasElement);\n    const refTextBox = canvas.getByTestId("text-number-demo");\n    await userEvent.clear(refTextBox);\n    await expect(TestClearTextBox.args.onValueChanged).toHaveBeenCalledWith(0);\n  }\n}',...TestClearTextBox.parameters?.docs?.source}}},TestTypeNewValue.parameters={...TestTypeNewValue.parameters,docs:{...TestTypeNewValue.parameters?.docs,source:{originalSource:'{\n  args: {\n    testId: "text-number-demo",\n    value: 10,\n    onValueChanged: jest.fn()\n  },\n  play: async ({\n    canvasElement\n  }) => {\n    const canvas = within(canvasElement);\n    const refTextBox = canvas.getByTestId("text-number-demo");\n    await userEvent.type(refTextBox, "5", {\n      initialSelectionStart: 0,\n      initialSelectionEnd: 1000\n    });\n    await expect(TestTypeNewValue.args.onValueChanged).toHaveBeenCalledWith(5);\n  }\n}',...TestTypeNewValue.parameters?.docs?.source}}};const __namedExportsOrder=["Default","InteractiveExample","TestClearTextBox","TestTypeNewValue"];try{InteractiveExample.displayName="InteractiveExample",InteractiveExample.__docgenInfo={description:"",displayName:"InteractiveExample",props:{}},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["src/ui/uiTextNumber/storyboard/UITextNumber.stories.tsx#InteractiveExample"]={docgenInfo:InteractiveExample.__docgenInfo,name:"InteractiveExample",path:"src/ui/uiTextNumber/storyboard/UITextNumber.stories.tsx#InteractiveExample"})}catch(__react_docgen_typescript_loader_error){}},"./src/ui/uiTextNumber/UITextNumber.tsx":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{"use strict";__webpack_require__.d(__webpack_exports__,{Z:()=>uiTextNumber_UITextNumber});const hooks_UseViewController=onValueChanged=>({handleOnValueChanged:event=>{if(onValueChanged){const value=Number(event.target.value);if(isNaN(value))return;onValueChanged(value)}}});try{UseViewController.displayName="UseViewController",UseViewController.__docgenInfo={description:"View controller for UI Button, seperates logic from compoment\nfor easier testing",displayName:"UseViewController",props:{}},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["src/ui/uiTextNumber/hooks/UseViewController.tsx#UseViewController"]={docgenInfo:UseViewController.__docgenInfo,name:"UseViewController",path:"src/ui/uiTextNumber/hooks/UseViewController.tsx#UseViewController"})}catch(__react_docgen_typescript_loader_error){}var jsx_runtime=__webpack_require__("./node_modules/react/jsx-runtime.js");const UITextNumber=props=>{const{handleOnValueChanged}=hooks_UseViewController(props.onValueChanged);return(0,jsx_runtime.jsx)("input",{className:"ui-text-number",value:props.value,"data-testid":props.testId,onChange:handleOnValueChanged})},uiTextNumber_UITextNumber=UITextNumber;try{UITextNumber.displayName="UITextNumber",UITextNumber.__docgenInfo={description:"Control to display and edit a numeric value",displayName:"UITextNumber",props:{value:{defaultValue:null,description:"Current value of the number",name:"value",required:!0,type:{name:"number"}},testId:{defaultValue:null,description:"Optional test id",name:"testId",required:!1,type:{name:"string"}},onValueChanged:{defaultValue:null,description:"Optional value change event",name:"onValueChanged",required:!1,type:{name:"((value: number) => void)"}}}},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["src/ui/uiTextNumber/UITextNumber.tsx#UITextNumber"]={docgenInfo:UITextNumber.__docgenInfo,name:"UITextNumber",path:"src/ui/uiTextNumber/UITextNumber.tsx#UITextNumber"})}catch(__react_docgen_typescript_loader_error){}},"?4f7e":()=>{}}]);